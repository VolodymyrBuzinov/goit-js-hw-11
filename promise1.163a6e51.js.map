{"version":3,"sources":["js/promise1.js"],"names":["delay","ms","Promise","resolve","logger","time","console","log","then"],"mappings":";AAIA,IAAMA,EAAQ,SAAAC,GACHC,OAAAA,QAAQC,QAAQF,IAGrBG,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBL,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,MAAMQ,KAAKJ","file":"promise1.163a6e51.js","sourceRoot":"..\\src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние\r\n// \"resolved\" через ms миллисекунд.Значением исполнившегося промиса должно быть то кол - во\r\n// миллисекунд которое передали во время вызова функции delay.\r\n\r\nconst delay = ms => {\r\n    return Promise.resolve(ms);\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"]}